% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProcessNeighborhoods.R
\name{neighborhoodToArray}
\alias{neighborhoodToArray}
\alias{print.HurdleNormalFit}
\title{neighborhoodToArray}
\usage{
neighborhoodToArray(
  pathList,
  nknots,
  vnames = NULL,
  summaryFun = summarySignedL1,
  nobs,
  self_edges = FALSE
)
}
\arguments{
\item{pathList}{a list of paths (coefficients in columns, paths in rows)}

\item{nknots}{number of lambda knots.  Be default, use the number of lambda in each neighborhood in pathList}

\item{vnames}{a vector of names to be applied to the resulting adjacency matrix}

\item{summaryFun}{function to reduce a vector-valued parameter set at each node to a scalar (representing an edge weight).  Defaults to the "signed" L2 norm.}

\item{nobs}{number of observations the model was fit; used to calculate BIC}

\item{self_edges}{should self edges (loops) be returned in the adjacency matrix; this allows inference of intercept quantities.}
}
\value{
list of (sparse) adjacency matrices, the number of non-zero elements (edges, before enforcing symmetry) for each matrix, the lambda for each matrix, the non-penalized, refitted pseudo log-likelihood, the number of parameters per edge, and the BIC
}
\description{
Convert neighborhood estimates fit on differing lambda paths into adjacency matrices
}
\details{
Join a series of paths fit node-wise into a list of adjacency matrices.
}
\seealso{
fitHurdle, autoGLM, interpolateEdges
}
