% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GroupLassoHurdle.R
\name{cgpaths}
\alias{cgpaths}
\title{Get a solution path for the CG model}
\usage{
cgpaths(y.zif, this.model, Blocks = Block(this.model),
  nodeId = NA_character_, nlambda = 50, lambda.min.ratio = if
  (length(y.zif) < ncol(this.model)) 0.005 else 0.05, lambda,
  penaltyFactor = "full", control = list(tol = 0.005, maxrounds = 300,
  debug = 1), theta)
}
\arguments{
\item{y.zif}{(zero-inflated) response}

\item{this.model}{model matrix used for both discrete and continuous linear predictors}

\item{Blocks}{output from \code{Block} giving the grouping/scaling for the penalization.}

\item{nodeId}{optional labels for the nodes.  will be used to stitch to}

\item{nlambda}{if `lambda` is not provided, then the number of lambda to interpolate between}

\item{lambda.min.ratio}{if `lambda` is not provided, then the left end of the solution path as a function of the lambda0, the lambda for the empty model}

\item{lambda}{penalty path desired}

\item{penaltyFactor}{one of `full`, `diagonal` or `identity` giving how the penalty should be scaled \emph{blockwise}}

\item{control}{optimization control parameters}

\item{theta}{(optional) initial guess for parameter}
}
\value{
matrix of parameters, one row per lambda
}
\description{
Get a solution path for the CG model
}
