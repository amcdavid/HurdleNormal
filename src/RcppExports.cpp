// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_rCondHurdle
double cpp_rCondHurdle(const NumericVector& x, int j, const NumericMatrix& G, const NumericMatrix& H, const NumericMatrix& K, double tol);
RcppExport SEXP _HurdleNormal_cpp_rCondHurdle(SEXP xSEXP, SEXP jSEXP, SEXP GSEXP, SEXP HSEXP, SEXP KSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_rCondHurdle(x, j, G, H, K, tol));
    return rcpp_result_gen;
END_RCPP
}
// cpp_rGibbsHurdle
NumericMatrix cpp_rGibbsHurdle(const NumericMatrix& G, const NumericMatrix& H, const NumericMatrix& K, int Nt, double tol);
RcppExport SEXP _HurdleNormal_cpp_rGibbsHurdle(SEXP GSEXP, SEXP HSEXP, SEXP KSEXP, SEXP NtSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type Nt(NtSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_rGibbsHurdle(G, H, K, Nt, tol));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_HurdleLikelihoodMod();

static const R_CallMethodDef CallEntries[] = {
    {"_HurdleNormal_cpp_rCondHurdle", (DL_FUNC) &_HurdleNormal_cpp_rCondHurdle, 6},
    {"_HurdleNormal_cpp_rGibbsHurdle", (DL_FUNC) &_HurdleNormal_cpp_rGibbsHurdle, 5},
    {"_rcpp_module_boot_HurdleLikelihoodMod", (DL_FUNC) &_rcpp_module_boot_HurdleLikelihoodMod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_HurdleNormal(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
